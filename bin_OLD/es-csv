#!/usr/bin/env python3
# -*- coding: utf-8 -*-

# Convert CSV format to ElasticSearch JSON


from eslib.procs import CSVReader
import sys, getopt
from eslib.prog import progname


OUT = sys.stderr


def usage(err = None, rich= False):
    if err:
        print("Argument error: %s" % err, file=OUT)

    p = progname()
    print("Usage:", file=OUT)
    print("  %s -h" % p, file=OUT)
    print("  %s [options] -i <index> -t <type> -f <fieldNames> [fileNames]" % p, file=OUT)

    if rich:
        print(file=OUT)
        print("Options:", file=OUT)
        print("  -s             Skip first line of input. (Commonly a header with column names.)", file=OUT)
        print("  -d             Delimiter. (default=',')", file=OUT)
        print("  -v             Verbose, display progress.", file=OUT)
        print("  --debug        Display debug info.", file=OUT)
        print(file=OUT)
        print("Field names are separated by commas. File names are normal command line arguments.", file=OUT)
        print("If no file name is given then stdin is used instead.", file=OUT)
        print(file=OUT)
        print("A field called '_id' will be used as the document id instead of a one generated", file=OUT)
        print("by ElasticSearch. A field named '_type' will override the document type specified", file=OUT)
        print("with the -t option.", file=OUT)

    if err:
        sys.exit(-1)
    else:
        sys.exit(0)


def main():

    # Default values
    index         = None
    doctype       = None
    fieldListStr  = None
    skipFirstLine = False
    procname      = None
    delimiter      = ","

    # Parse command line input
    if len(sys.argv) == 1: usage()
    try:
        optlist, args = getopt.gnu_getopt(sys.argv[1:], ':i:t:f:d:sh', ["name="])
    except:
        usage()
    for (o, a) in optlist:
        if   o == "-h": usage(rich=True)
        elif o == "-f": fieldListStr = a
        elif o == "-t": doctype = a
        elif o == "-i": index = a
        elif o == "-s": skipFirstLine = True
        elif o == "-d": delimiter = a
        elif o == "--name": procname = a
    filenames = args

    if not index: usage("no index specified")
    if not doctype: usage("doc type not specified (specify a dummy if overriden by csv column)")
    if not fieldListStr: usage("field names to map to must be specified")

    fieldList = [x.strip() for x in fieldListStr.split(",")]

    # Set up and run this processor
    dp = CSVReader(procname or progname())
    dp.index = index
    dp.doctype = doctype
    dp.fieldList = fieldList
    dp.skipFirstLine = skipFirstLine
    dp.delimiter = delimiter

    dp.run(filenames)


if __name__ == "__main__": main()

